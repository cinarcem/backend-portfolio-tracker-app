plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.portfoliotracker'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.8.3'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2:3.4.1'
	implementation ('org.springframework.boot:spring-boot-starter-webflux'){
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation ('org.springframework.boot:spring-boot-starter-actuator') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	implementation ('org.springframework.boot:spring-boot-starter-data-jpa') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	implementation ('org.springframework.boot:spring-boot-starter-web') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	implementation ('org.springframework.cloud:spring-cloud-starter-config') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	implementation ('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
